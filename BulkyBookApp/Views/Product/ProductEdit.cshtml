@using BulkyBookWeb.Models
@model Product

<form method="post" asp-action="ProductEdit">
    <div class="border p-3 mt-4">
        <div class="row pb-2">
            <h2 class="text-primary">Edit Product</h2>
            <hr />
        </div>
        <div asp-validation-summary="All"></div>

        <!-- Hidden field for ProductId -->
        <input type="hidden" asp-for="ProductId" />

        <div class="mb-3">
            <label asp-for="Name"></label>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="Image"></label>
            <input asp-for="Image" class="form-control" />
            <span asp-validation-for="Image" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="Price"></label>
            <input asp-for="Price" class="form-control" />
            <span asp-validation-for="Price" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="Quantity"></label>
            <input asp-for="Quantity" class="form-control" />
            <span asp-validation-for="Quantity" class="text-danger"></span>
        </div>
        <!-- Category Dropdown -->
        <div class="mb-3">
            <label asp-for="CategoryId"></label>
            <select id="CategoryDropdown" asp-for="CategoryId" class="form-control">
                <option value="">-- Select Category --</option>
            </select>
            <span asp-validation-for="CategoryId" class="text-danger"></span>
        </div>
        <button type="submit" class="btn btn-primary" style="width:150px">Update</button>
        <a asp-controller="Product" asp-action="ProductIndex" class="btn btn-secondary" style="width:150px">
            Back to List
        </a>
    </div>
</form>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var categoryDropdown = document.getElementById('CategoryDropdown');

            // Fetch categories and populate the dropdown
            fetch('@Url.Action("GetCategories", "Product")')
                .then(response => response.json())
                .then(data => {
                    data.forEach(category => {
                        var option = document.createElement('option');
                        option.value = category.id;
                        option.text = category.name;
                        // Set selected option if it matches the product's category
                        if (category.id == @Model.CategoryId) {
                            option.selected = true;
                        }
                        categoryDropdown.add(option);
                    });
                })
                .catch(error => console.error('Error fetching categories:', error));
        });
    </script>
}
